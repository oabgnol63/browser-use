waittime:
  &default_waits
  wait_short: 5
  wait_medium: 20
  wait_long: 60
  wait_extra_long: 120

tools:
  &tools
  tool_capture_and_save_screen: capture_and_save_screen
  tool_is_load_complete: is_load_complete
  tool_go_forward: go_forward
  tool_compare_image: check_img_similarity
  tool_find_path: find_file
  tool_wait_for_file: wait_for_file

tests:
- TestName: bbc_com_initial_page_load_5
  TestID: 1
  TestType: initial_page_load
  TestParams:
    <<: [*default_waits, *tools]
    url: https://bbc.com
  TestStepsPXY:
    Step 1: 'Go to {url}' 
    Step 2: 'If a window prompted for proxy authentication: input {proxy_username} for "Email/Login ID" and click "Next". Otherwise ignore this step and go to Step 4'
    Step 3: 'Input {proxy_password} for password and click "Log in"'
    Step 4: 'Wait for the website to load completely'
    Step 5: 'Scroll down to the end of the page and then back up to the top 2 times to ensure all content is triggered to load.'
    Step 6: 'Wait for any new content triggered by the scroll to load completely.'
    Step 7: 'Use the {tool_capture_and_save_screen} tool to capture a full-page screenshot and save it as "{TestName}_pxy.png".'
    Step 8: 'Use the {tool_wait_for_file} tool to wait for the file "{TestName}_no_pxy.png" to be created by the other agent. Set a timeout of 120 seconds.'
    Step 9: 'Compare "{TestName}_pxy.png" and "{TestName}_no_pxy.png" using the {tool_compare_image} tool'
    Step 10: 'Evaluate the result. The test should Pass/Fail based on the following criteria:
        * All elements(images, texts, fonts, etc,) are visible and not crashed or overlapped.
        * Scrolling is smooth.
        * The two images should be identical, with the confidence score as proof, and contain the expected search results'
  TestSteps:
    Step 1: 'Go to {url}'
    Step 2: 'Scroll down to the end of the page and then back up to the top 2 times to ensure all content is triggered to load.'
    Step 3: 'Wait for any new content triggered by the scroll to load completely.'
    Step 4: 'Use the {tool_capture_and_save_screen} tool to capture a full-page screenshot and save it as "{TestName}_no_pxy.png".'
    Step 5: 'Evaluate the result. The test should Pass/Fail based on the following criteria:
        * All elements(images, texts, fonts, etc,) are visible and not crashed or overlapped.
        * Scrolling is smooth'

- TestName: bbc_com_mouse_event_5
  TestID: 2
  TestType: mouse_event
  TestParams:
    <<: [*default_waits, *tools]
    url: https://bbc.com
    search_term: 'Earth'
  TestStepsPXY:
    Step 1: 'Go to {url}' 
    Step 2: 'If a window prompted for proxy authentication: input {proxy_username} for "Email/Login ID" and click "Next". Otherwise ignore this step and go to Step 4'
    Step 3: 'Input {proxy_password} for password and click "Log in"'
    Step 4: 'Wait for the website to load completely'
    Step 5: 'On the homepage, locate and click on the dropdown menu button'
    Step 6: 'Locate and click on {search_term} section, then click on the first item. Wait for the new page to load'
    Step 7: 'Wait until all web elements load. Use the {tool_capture_and_save_screen} tool to capture view-port screenshot and save as "{TestName}_pxy.png"'
    Step 8: 'Use the {tool_wait_for_file} tool to wait for the file "{TestName}_no_pxy.png" to be created by the other agent. Set a timeout of 120 seconds.'
    Step 9: 'Compare "{TestName}_pxy.png" and "{TestName}_no_pxy.png" using the {tool_compare_image} tool'
    Step 10: 'Evalute the result: Return Pass/Fail following criteria:
        * The menus should respond to on click event and support navigation to the required entry
        * Two images should be identical, with confidence score as proof, and contain the expected search results'
  TestSteps:
    Step 1: 'Go to {url}'
    Step 2: 'Wait for the website to load completely'
    Step 3: 'On the homepage, locate and click on the dropdown menu button'
    Step 4: 'Locate and click on {search_term} section, then click on the first item. Wait for the new page to load'
    Step 5: 'Wait until all web elements loaded. Use the {tool_capture_and_save_screen} tool to capture viewport screenshot and save as "{TestName}_no_pxy.png"'
    Step 6: 'Evalute the result: Return Pass/Fail following criteria:
        * The menus should respond to on click event and support navigation to the required entry'

- TestName: bbc_com_navigation_5
  TestID: 3     # Unique identifier for the test (e.g., 3)
  TestType: navigation
  TestParams:
    ## REQUIRED PARAMETERS ##
    <<: [*default_waits, *tools]    # Default waits and tools use by agent 
    url: https://bbc.com                           # Test url, e.g "https://www.example.com"
    ## OPTIONAL PARAMETERS ##
    # apt: 5      # Actions per step, default is 10. Set it to a lower value if the test is tricky, or often fails.
                  # Be aware that setting this will increase the test execution time and LLM token usage
    scroll: 1     # number of page for each scrolling action. Decrease it will slow down test execution, but increase the chance of finding the search term.
  TestStepsPXY:
    ############################# BEGIN UNTOUCHED STEPS #############################
    Step 1: 'Go to {url}' 
    Step 2: 'If a window prompted for Menlo proxy authentication: input {proxy_username} for "Email/Login ID" and click "Next". Otherwise ignore this step and go to Step 4'
    Step 3: 'Input {proxy_password} for password and click "Log in"'
    Step 4: 'Wait 5 seconds. If a pop up window appears, reload page'
    #############################  END UNTOUCHED STEPS  #############################
    Step 5: > # Specify your actions, e.g. 'Find the link contain "WORLD" and click it'
      '
      * Locate "Only from the BBC" title and click the first news under 
      * If scroll is needed, scroll {scroll} page each time to find search term
      '
    ############################# BEGIN UNTOUCHED STEPS #############################
    Step 6: > 
      'Wait 5 seconds'
      'Use the {tool_capture_and_save_screen} tool to capture full-page screenshot and save as **"forward_img_pxy.png"**'
      'Use the {tool_wait_for_file} tool to wait for the file **"forward_img_no_pxy.png"** to be created by the other agent. Set a timeout of 120 seconds.'
      'Compare **"forward_img_pxy.png"** and **"forward_img_no_pxy.png"** using the {tool_compare_image} tool'
      'Click "go back" button, Wait 5 seconds'
      'Click "go forward" button, Wait 5 seconds'
    Step 7: >
      'Use the {tool_capture_and_save_screen} tool to capture full-page screenshot and save as **"back_then_forward_img_pxy.png"**'
      'Use the {tool_wait_for_file} tool to wait for the file **"back_then_forward_img_no_pxy.png"** to be created by the other agent. Set a timeout of 120 seconds.'
      'Compare **"back_then_forward_img_pxy.png"** and **"back_then_forward_img_no_pxy.png"** using the {tool_compare_image} tool'
      'Click "go back" button again'
    Step 8: > 
      'Wait 5 seconds'
      'Use the {tool_capture_and_save_screen} tool to capture full-page screenshot and save as "{TestName}_pxy.png"'
      'Use the {tool_wait_for_file} tool to wait for the file "{TestName}_no_pxy.png" to be created by the other agent. Set a timeout of 120 seconds.'
      'Compare **"{TestName}_pxy.png"** and **"{TestName}_no_pxy.png"** using the {tool_compare_image} tool'
    #############################  END UNTOUCHED STEPS  #############################
    Step 9: > ## Modify this step to fit your expectations
      '
      Evaluate the result: Return Pass/Fail following criteria: 
        * At each step(back-forward-back button testing), all the content must be rendered correctly
        * At the end of back-forward-back button testing cycle, the homepage should be displayed
        * All images comparisons should be similar, with confidence score as proof
      '
  TestSteps:
    ############################# BEGIN UNTOUCHED STEPS #############################
    Step 1: 'Go to {url}'
    Step 2: 'Wait util the website and all web elements to load completely. If a pop up window appears, reload page'
    #############################  END UNTOUCHED STEPS  #############################
    Step 3: > # Specify your actions, e.g. 'Find the link contain {search_term} and click it'
      '
      * Locate "Only from the BBC" title and click the first news under 
      * If scroll is needed, scroll {scroll} page each time to find search term
      '
    ############################# BEGIN UNTOUCHED STEPS #############################
    Step 4: >
      'Wait 5 seconds. Check for rendering errors'
      'Use the {tool_capture_and_save_screen} tool to capture full-page screenshot and save as **"forward_img_no_pxy.png"**'
      'Click "go back" button, Wait 5 seconds'
      'Click "go forward" button, Wait 5 seconds'
    Step 5: >
      'Use the {tool_capture_and_save_screen} tool to capture full-page screenshot and save as **"back_then_forward_img_no_pxy.png"**'
      'Click "go back" button again. Wait 5 seconds'
    Step 6: 'Use the {tool_capture_and_save_screen} tool to capture full-page screenshot and save as **"{TestName}_no_pxy.png"**'
    #############################  END UNTOUCHED STEPS  #############################
    Step 7: > ## Should be the same as the above expectations
      '
      Evaluate the result: Return Pass/Fail following criteria:
        * At each step(back-forward-back button testing), all the content must be rendered correctly
        * At the end of back-forward-back button testing cycle, the homepage should be displayed
      '

- TestName: bbc_com_keyboard_input_5
  TestID: 4
  TestType: keyboard_input
  TestParams:
    <<: [*default_waits, *tools]
    url: https://bbc.com
    search_term: 'Jeremy Clarkson'
    # apt: 1
  TestStepsPXY:
    Step 1: 'Go to {url}' 
    Step 2: 'If a window prompted for proxy authentication: input {proxy_username} for "Email/Login ID" and click "Next". Otherwise ignore this step and go to Step 4'
    Step 3: 'Input {proxy_password} for password and click "Log in"'
    Step 4: 'Wait for the website to load completely'
    Step 5: >
      'If the page is blank, wait for 5 seconds more'
      'Locate the search box/icon, type "{search_term}" on search bar, click search'. 
      'If navigation not occur, search again and press Enter'
    Step 6: >
      'If the page is blank, wait for 5 seconds more'
      'Use the {tool_capture_and_save_screen} tool to capture view-port screenshot and save as "{TestName}_pxy.png"'
      'Use the {tool_wait_for_file} tool to wait for the file "{TestName}_no_pxy.png" to be created by the other agent. Set a timeout of 120 seconds.'
      'Compare "{TestName}_pxy.png" and "{TestName}_no_pxy.png" using the {tool_compare_image} tool'
    Step 7: >
      '
      Evalute the result: Return Pass/Fail following criteria:
        * The search results context should contain "{search_term}"
        * Two images must be compared and are similar, with confidence score as proof.
      '
  TestSteps:
    Step 1: 'Go to {url}'
    Step 2: 'Wait for the website to load completely'
    Step 3: >
      'If the page is blank, wait for 5 seconds more'
      'Locate the search box/icon, type "{search_term}" on search bar, click search'. 
      'If navigation not occur, search again and press Enter'
    Step 4: >
      'If the page is blank, wait for 5 seconds more'
      'Use the {tool_capture_and_save_screen} tool to capture view-port screenshot and save as "{TestName}_no_pxy.png"'
    Step 5: > 
      '
      Evalute the result: Return Pass/Fail following criteria:
        * The search results context should contain "{search_term}"
      '

- TestName: nbcnews_com_html5_video_playback_2
  TestID: 5
  Tag: [skip, video]
  TestParams:
    <<: [*default_waits, *tools]
    url: https://nbcnews.com
  TestStepsPXY:
    Step 1: 'Go to {url}' 
    Step 2: 'If a window prompted for proxy authentication: input {proxy_username} for "Email/Login ID" and click "Next". Otherwise ignore this step and go to Step 4'
    Step 3: 'Input {proxy_password} for password and click "Log in"'
    Step 4: 'Wait for the website to load completely'
    Step 5: 'On the home page, looking for any video (not live) with advertisement. Click on the video to play it'
    Step 6: 'Let the advertisement play completely, validate that the video is playing and the sound is on'
    Step 7: 'Evalute the result: Return Pass/Fail following criteria:
        * The video should be playing with sound on'
    Step 8: 'Finally, use the {tool_capture_and_save_screen} tool to capture full-page screenshot and save as "{TestName}_pxy.png"'
  TestSteps:
    Step 1: 'Go to {url}'
    Step 2: 'Wait for the website to load completely'
    Step 3: 'On the home page, looking for any video (not live) with advertisement. Click on the video to play it'
    Step 4: 'Let the advertisement play completely, validate that the video is playing and the sound is on'
    Step 5: 'Finally, use the {tool_capture_and_save_screen} tool to capture full-page screenshot and save as "{TestName}_no_pxy.png"'

- TestType: navigation
  TestName: nbcnews_com_navigation_5            # Test case name, e.g. facebook_com_navigation_5
  TestID: 111              # Unique identifier for the test (e.g., 3)
  TestParams:
    ## REQUIRED PARAMETERS ##
    <<: [*default_waits, *tools]    # Default waits and tools use by agent 
    url: https://nbcnews.com                           # Test url, e.g "https://www.example.com"
    ## OPTIONAL PARAMETERS ##
    # apt: 5      # Actions per step, default is 10. Set it to a lower value if the test is tricky, or often fails.
                  # Be aware that setting this will increase the test execution time and LLM token usage
    scroll: 1     # number of page for each scrolling action. Decrease it will slow down test execution, but increase the chance of finding the search term.
  TestStepsPXY:
    ############################# BEGIN UNTOUCHED STEPS #############################
    Step 1: > 
      'Go to {url}' 
      'If a window prompted for Menlo proxy authentication: input {proxy_username} for "Email/Login ID" and click "Next"'
      'Otherwise, skip to Step 4'
    Step 2: 'Input {proxy_password} for password and click "Log in"'
    Step 3: 'Wait 5 seconds. If a pop up window appears, reload page'
    #############################  END UNTOUCHED STEPS  #############################
    Step 4: > # Specify your actions, e.g. 'Find the link contain "WORLD" and click it'
      '
      * Locate "Latest News" title and click the first news under 
      * If scroll is needed, scroll {scroll} page each time to find search term
      '
    ############################# BEGIN UNTOUCHED STEPS #############################
    Step 5: > 
      'Wait 5 seconds'
      'Use the {tool_capture_and_save_screen} tool to capture full-page screenshot and save as **"forward_img_pxy.png"**. Check for rendering errors'
      'Use the {tool_wait_for_file} tool to wait for the file **"forward_img_no_pxy.png"** to be created by the other agent. Set a timeout of 120 seconds.'
      'Compare **"forward_img_pxy.png"** and **"forward_img_no_pxy.png"** using the {tool_compare_image} tool'
      'Click "go back" button, Wait 5 seconds. Check for rendering errors'
      'Click "go forward" button, Wait 5 seconds. Check for rendering errors'
    Step 6: >
      'Use the {tool_capture_and_save_screen} tool to capture full-page screenshot and save as **"back_then_forward_img_pxy.png"**'
      'Use the {tool_wait_for_file} tool to wait for the file **"back_then_forward_img_no_pxy.png"** to be created by the other agent. Set a timeout of 120 seconds.'
      'Compare **"back_then_forward_img_pxy.png"** and **"back_then_forward_img_no_pxy.png"** using the {tool_compare_image} tool'
      'Click "go back" button again'
    Step 7: > 
      'Wait 5 seconds'
      'Use the {tool_capture_and_save_screen} tool to capture full-page screenshot and save as "{TestName}_pxy.png"'
      'Use the {tool_wait_for_file} tool to wait for the file "{TestName}_no_pxy.png" to be created by the other agent. Set a timeout of 120 seconds.'
      'Compare **"{TestName}_pxy.png"** and **"{TestName}_no_pxy.png"** using the {tool_compare_image} tool'
    #############################  END UNTOUCHED STEPS  #############################
    Step 8: > ## Modify this step to fit your expectations
      '
      Evaluate the result: Return Pass/Fail following criteria: 
        * At each step(back-forward-back button testing), all the content must be rendered correctly
        * At the end of back-forward-back button testing cycle, the homepage should be displayed
        * All images comparisons should be similar, with confidence score as proof
      '
  TestSteps:
    ############################# BEGIN UNTOUCHED STEPS #############################
    Step 1: 'Go to {url}'
    Step 2: 'Wait 5 seconds. If a pop up window appears, reload page'
    #############################  END UNTOUCHED STEPS  #############################
    Step 3: > # Specify your actions, e.g. 'Find the link contain {search_term} and click it'
      '
      * Locate "Latest News" title and click the first news under 
      * If scroll is needed, scroll {scroll} page each time to find search term
      '
    ############################# BEGIN UNTOUCHED STEPS #############################
    Step 4: >
      'Wait 5 seconds. Check for rendering errors'
      'Use the {tool_capture_and_save_screen} tool to capture full-page screenshot and save as **"forward_img_no_pxy.png"**'
      'Click "go back" button, Wait 5 seconds. Check for rendering errors'
      'Click "go forward" button, Wait 5 seconds. Check for rendering errors'
    Step 5: >
      'Use the {tool_capture_and_save_screen} tool to capture full-page screenshot and save as **"back_then_forward_img_no_pxy.png"**'
      'Click "go back" button again. Wait 5 seconds. Check for rendering errors'
    Step 6: 'Use the {tool_capture_and_save_screen} tool to capture full-page screenshot and save as **"{TestName}_no_pxy.png"**'
    #############################  END UNTOUCHED STEPS  #############################
    Step 7: > ## Should be the same as the above expectations
      '
      Evaluate the result: Return Pass/Fail following criteria:
        * At each step(back-forward-back button testing), all the content must be rendered correctly
        * At the end of back-forward-back button testing cycle, the homepage should be displayed
      '