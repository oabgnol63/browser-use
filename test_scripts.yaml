waittime:
  &default_waits
  wait_short: 10
  wait_medium: 30
  wait_long: 60

tools:
  &tools
  tool_capture_and_save_screen: capture_and_save_screen
  tool_is_load_complete: is_load_complete
  tool_go_forward: go_forward
  tool_compare_image: check_img_similarity
  tool_find_path: find_file

tests:
- TestName: bbc_com_initial_page_load_5
  TestID: 1
  TestParams:
    <<: [*default_waits, *tools]
    url: https://bbc.com
  TestStepsPXY:
    Step 1: 'Go to {url}' 
    Step 2: 'If a window prompted for proxy authentication: input {proxy_username} for "Email/Login ID" and click "Next". Otherwise ignore this step and go to Step 4'
    Step 3: 'Input {proxy_password} for password and click "Log in"'
    Step 4: 'Wait for the website to load completely'
    Step 5: 'Scroll down to the end of the page and then back up to the top 2 times to ensure all content is triggered to load.'
    Step 6: 'Wait for any new content triggered by the scroll to load completely.'
    Step 7: 'Use the {tool_capture_and_save_screen} tool to capture a view-port screenshot and save it as "{TestName}_pxy.png".'
    Step 8: 'Use the {tool_find_path} tool to find the paths of "{TestName}_pxy.png" and "{TestName}_no_pxy.png", then use the {tool_compare_image} to compare the two images with a 5% tolerance for size difference.'
    Step 9: 'Evaluate the result. The test should Pass/Fail based on the following criteria:
        * All elements(images, texts, fonts, etc,) are visible and not crashed or overlapped.
        * Scrolling is smooth.
        * The two images should be identical, with the confidence score as proof.'
  TestSteps:
    Step 1: 'Go to {url}'
    Step 2: 'Scroll down to the end of the page and then back up to the top 2 times to ensure all content is triggered to load.'
    Step 3: 'Wait for any new content triggered by the scroll to load completely.'
    Step 4: 'Use the {tool_capture_and_save_screen} tool to capture a view-port screenshot and save it as "{TestName}_no_pxy.png".'
    Step 5: 'Evaluate the result. The test should Pass/Fail based on the following criteria:
        * All elements(images, texts, fonts, etc,) are visible and not crashed or overlapped.
        * Scrolling is smooth.'

- TestName: bbc_com_mouse_event_5
  TestID: 2
  TestParams:
    <<: [*default_waits, *tools]
    url: https://bbc.com
  TestStepsPXY:
    Step 1: 'Go to {url}' 
    Step 2: 'If a window prompted for proxy authentication: input {proxy_username} for "Email/Login ID" and click "Next". Otherwise ignore this step and go to Step 4'
    Step 3: 'Input {proxy_password} for password and click "Log in"'
    Step 4: 'Wait for the website to load completely'
    Step 5: 'On the homepage, locate and click on the dropdown menu button'
    Step 6: 'Locate and click on **Earth** section, then click on the first item. Wait for the new page to load'
    Step 7: 'Wait until all web elements load. Use the {tool_capture_and_save_screen} tool to capture full-page screenshot and save as "{TestName}_pxy.png"'
    Step 8: 'Use the {tool_find_path} tool to find the paths of "{TestName}_pxy.png" and "{TestName}_no_pxy.png", then use the {tool_compare_image} to compare two paths'
    Step 9: 'Evalute the result: Return Pass/Fail following criteria:
        * The menus should respond to on click event and support navigation to the required entry
        * Two images should be identical, with confidence score as proof'
  TestSteps:
    Step 1: 'Go to {url}'
    Step 2: 'Wait for the website to load completely'
    Step 3: 'On the homepage, locate and click on the dropdown menu button'
    Step 4: 'Locate and click on **Earth** section, then click on the first item. Wait for the new page to load'
    Step 5: 'Wait until all web elements loaded. Use the {tool_capture_and_save_screen} tool to capture full-page screenshot and save as "{TestName}_no_pxy.png"'
    Step 6: 'Evalute the result: Return Pass/Fail following criteria:
        * The menus should respond to on click event and support navigation to the required entry'

- TestName: bbc_com_navigation_5
  TestID: 3
  TestParams:
    <<: [*default_waits, *tools]
    url: https://bbc.com
  TestStepsPXY:
    Step 1: 'Go to {url}' 
    Step 2: 'If a window prompted for Menlo proxy authentication: input {proxy_username} for "Email/Login ID" and click "Next". Otherwise ignore this step and go to Step 4'
    Step 3: 'Input {proxy_password} for password and click "Log in"'
    Step 4: 'Wait for the website to load completely'
    Step 5: 'Identify the header "More News" and click the first news link under. Wait for the new page to load completely'
    Step 6: 'Click "go back" button, wait for the page to load. Click "go forward" button, wait for the load. Click "go back" button again'
    Step 7: 'Wait the website to load completely'
    Step 8: 'Use the {tool_capture_and_save_screen} tool to capture full-page screenshot and save as "{TestName}_pxy.png"'
    Step 9: 'Use the {tool_find_path} tool to find the paths of "{TestName}_pxy.png" and "{TestName}_no_pxy.png", then use the {tool_compare_image} to compare two paths'
    Step 10: 'Evalute the result: Return Pass/Fail following criteria:
        * At the end of back-forward-back button testing cycle, the homepage should be displayed
        * Two images should be identical, with confidence score as proof'
  TestSteps:
    Step 1: 'Go to {url}'
    Step 2: 'Wait for the website to load completely'
    Step 5: 'Identify the header "More News" and click the first news link under. Wait for the new page to load completely'
    Step 4: 'Click "go back" button, wait for the page to load. Click "go forward" button, wait for the load. Click "go back" button again'
    Step 5: 'Wait the website to load completely'
    Step 6: 'Use the {tool_capture_and_save_screen} tool to capture full-page screenshot and save as "{TestName}_no_pxy.png"'
    Step 7: 'Evalute the result: Return Pass/Fail following criteria:
        * At the end of back-forward-back button testing cycle, the homepage should be displayed'

- TestName: bbc_com_keyboard_input_5
  TestID: 4
  TestParams:
    <<: [*default_waits, *tools]
    url: https://bbc.com
  TestStepsPXY:
    Step 1: 'Go to {url}' 
    Step 2: 'If a window prompted for proxy authentication: input {proxy_username} for "Email/Login ID" and click "Next". Otherwise ignore this step and go to Step 4'
    Step 3: 'Input {proxy_password} for password and click "Log in"'
    Step 4: 'Wait for the website to load completely'
    Step 5: 'Locate the search box/icon, type "Jeremy Clarkson" on search bar and click search. Wait for the new page to load completely'
    Step 6: 'Use the {tool_capture_and_save_screen} tool to capture view-port screenshot and save as "{TestName}_pxy.png"'
    Step 7: 'Use the {tool_find_path} tool to find the paths of "{TestName}_pxy.png" and "{TestName}_no_pxy.png", then use the {tool_compare_image} to compare two paths'
    Step 8: 'Evalute the result: Return Pass/Fail following criteria:
        * The search results context should contain "Jeremy Clarkson"
        * Two images should be identical, with confidence score as proof'
  TestSteps:
    Step 1: 'Go to {url}'
    Step 2: 'Wait for the website to load completely'
    Step 3: 'Locate the search box/icon, type "Jeremy Clarkson" on search bar and click search. Wait for the new page to load completely'
    Step 4: 'Use the {tool_capture_and_save_screen} tool to capture view-port screenshot and save as "{TestName}_no_pxy.png"'
    Step 5: 'Evalute the result: Return Pass/Fail following criteria:
        * The search results context should contain "Jeremy Clarkson"'

# - TestName: nbcnews_com_html5_video_playback_2
#   TestID: 5
#   TestParams:
#     <<: [*default_waits, *tools]
#     url: https://nbcnews.com
#   TestStepsPXY:
#     Step 1: 'Go to {url}' 
#     Step 2: 'If a window prompted for proxy authentication: input {proxy_username} for "Email/Login ID" and click "Next". Otherwise ignore this step and go to Step 4'
#     Step 3: 'Input {proxy_password} for password and click "Log in"'
#     Step 4: 'Wait for the website to load completely'
#     Step 5: 'On the home page, looking for any video (not live) with advertisement. Click on the video to play it'
#     Step 6: 'Let the advertisement play completely, validate that the video is playing and the sound is on'
#     Step 7: 'Evalute the result: Return Pass/Fail following criteria:
#         * The video should be playing with sound on'
#     Step 8: 'Finally, use the {tool_capture_and_save_screen} tool to capture full-page screenshot and save as "{TestName}_pxy.png"'
#   TestSteps:
#     Step 1: 'Go to {url}'
#     Step 2: 'Wait for the website to load completely'
#     Step 3: 'On the home page, looking for any video (not live) with advertisement. Click on the video to play it'
#     Step 4: 'Let the advertisement play completely, validate that the video is playing and the sound is on'
#     Step 5: 'Finally, use the {tool_capture_and_save_screen} tool to capture full-page screenshot and save as "{TestName}_no_pxy.png"'